  broker:
      image: confluentinc/cp-server:${TAG}
      hostname: kafka.kerberos-demo.local
      container_name: kafka
      depends_on:
        - zookeeper
        - openldap
        - kdc
      ports:
        - "8090:8090"
        - "9092:9092"
        - "9093:9093"
        - "9094:9094"
      volumes:
        - ./conf:/tmp/conf
        - ./client-configs:/etc/client-configs
        - secret:/var/lib/secret
        - ./kdc/krb5.conf:/etc/krb5.conf
        - ./kafka/:/etc/kafka/
      environment:
        KAFKA_SUPER_USERS: User:admin;User:mds;User:professor;User:kafka
        KAFKA_BROKER_ID: 1
        KAFKA_OPTS: -Djava.security.auth.login.config=/etc/kafka/kafka.jaas -Dsun.security.krb5.debug=true
        KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
        KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
        KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9093,EXTERNAL://kafka:9092,OUTSIDE://localhost:9094
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:SASL_PLAINTEXT,EXTERNAL:SASL_PLAINTEXT,OUTSIDE:SASL_PLAINTEXT
        KAFKA_CONFLUENT_METADATA_SECURITY_PROTOCOL: SASL_PLAINTEXT
         # Configure interbroker listener
        KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
        KAFKA_SASL_KERBEROS_SERVICE_NAME: kafka
        KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: GSSAPI
        KAFKA_LISTENER_NAME_INTERNAL_SASL_ENABLED_MECHANISMS: GSSAPI
        KAFKA_LISTENER_NAME_INTERNAL_SASL_KERBEROS_SERVICE_NAME: kafka
        # note we're only specifying two users, one for broker-to-broker communication (admin) and one for MDS to talk to broker (mds)
        KAFKA_LISTENER_NAME_INTERNAL_GSSAPI_SASL_JAAS_CONFIG: |
                                                              \
                                                              com.sun.security.auth.module.Krb5LoginModule required \
                                                              debug=true \
                                                              useKeyTab=true \
                                                              storeKey=true \
                                                              keyTab="/var/lib/secret/kafka-admin.key" \
                                                              principal="admin/for-kafka@TEST.CONFLUENT.IO";

        # Configure external listener
        KAFKA_LISTENER_NAME_EXTERNAL_SASL_ENABLED_MECHANISMS: OAUTHBEARER
        KAFKA_LISTENER_NAME_EXTERNAL_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS: io.confluent.kafka.server.plugins.auth.token.TokenBearerValidatorCallbackHandler
        KAFKA_LISTENER_NAME_EXTERNAL_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS: io.confluent.kafka.server.plugins.auth.token.TokenBearerServerLoginCallbackHandler
        KAFKA_LISTENER_NAME_EXTERNAL_OAUTHBEARER_SASL_JAAS_CONFIG: |
                                                                   \
                                                                   org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
                                                                   publicKeyPath="/tmp/conf/public.pem";
        # Configure external listener
        KAFKA_LISTENER_NAME_OUTSIDE_SASL_ENABLED_MECHANISMS: OAUTHBEARER
        KAFKA_LISTENER_NAME_OUTSIDE_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS: io.confluent.kafka.server.plugins.auth.token.TokenBearerValidatorCallbackHandler
        KAFKA_LISTENER_NAME_OUTSIDE_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS: io.confluent.kafka.server.plugins.auth.token.TokenBearerServerLoginCallbackHandler
        KAFKA_LISTENER_NAME_OUTSIDE_OAUTHBEARER_SASL_JAAS_CONFIG: |
                                                                   \
                                                                   org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
                                                                   publicKeyPath="/tmp/conf/public.pem";

        # CONFIGURE AUTHORIZER
        # Setup kafka to use RBAC authorizer
        KAFKA_AUTHORIZER_CLASS_NAME: io.confluent.kafka.security.authorizer.ConfluentServerAuthorizer

        # ======================== CONFIGURE MDS ====================================
        # Configure how MDS talks to broker
        KAFKA_CONFLUENT_METADATA_BOOTSTRAP_SERVERS: INTERNAL://kafka:9093
        KAFKA_CONFLUENT_METADATA_SASL_MECHANISM: GSSAPI
        KAFKA_CONFLUENT_METADATA_SASL_KERBEROS_SERVICE_NAME: kafka
        KAFKA_CONFLUENT_METADATA_SASL_JAAS_CONFIG: |
                                                   \
                                                   com.sun.security.auth.module.Krb5LoginModule required \
                                                   debug=true \
                                                   useKeyTab=true \
                                                   storeKey=true \
                                                   keyTab="/var/lib/secret/kafka-admin.key" \
                                                   principal="admin/for-kafka@TEST.CONFLUENT.IO";

        # Configure how MDS stores its data in a topic
        # supposedly more stuff can be overridden with the same prefix
        KAFKA_CONFLUENT_METADATA_TOPIC_REPLICATION_FACTOR: 1

        # Configure MDS listener and http server
        KAFKA_CONFLUENT_METADATA_SERVER_AUTHENTICATION_METHOD: BEARER
        KAFKA_CONFLUENT_METADATA_SERVER_AUTHENTICATION_ROLES: '**'
        KAFKA_CONFLUENT_METADATA_SERVER_LISTENERS: http://0.0.0.0:8090
        KAFKA_CONFLUENT_METADATA_SERVER_ADVERTISED_LISTENERS: http://kafka:8090
        KAFKA_CONFLUENT_METADATA_SERVER_OPENAPI_ENABLE: 'true'

        # Configure RBAC token server (authentication)
        KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_AUTH_ENABLE: 'true'
        KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_MAX_LIFETIME_MS: 3600000
        KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_SIGNATURE_ALGORITHM: RS256
        KAFKA_CONFLUENT_METADATA_SERVER_TOKEN_KEY_PATH: /tmp/conf/keypair.pem
        KAFKA_CONFLUENT_METADATA_SERVER_PUBLIC_KEY_PATH: /tmp/conf/public.pem

        # Configure RBAC authorizer
        # KAFKA_CONFLUENT_AUTHORIZER_SCOPE: myCluster
        KAFKA_CONFLUENT_AUTHORIZER_ACCESS_RULE_PROVIDERS: CONFLUENT,ZK_ACL
        # KAFKA_CONFLUENT_AUTHORIZER_METADATA_PROVIDER: RBAC
        KAFKA_CONFLUENT_AUTHORIZER_GROUP_PROVIDER: RBAC
        # KAFKA_CONFLUENT_METADATA_SERVER_SCOPE: ''

        # Configure MDS to talk to AD/LDAP
        KAFKA_LDAP_JAVA_NAMING_FACTORY_INITIAL: com.sun.jndi.ldap.LdapCtxFactory
        KAFKA_LDAP_COM_SUN_JNDI_LDAP_READ_TIMEOUT: 3000
        KAFKA_LDAP_JAVA_NAMING_PROVIDER_URL: ldap://openldap:389
        # how to authenticate to LDAP
        KAFKA_LDAP_JAVA_NAMING_SECURITY_PRINCIPAL: cn=admin,dc=planetexpress,dc=com
        KAFKA_LDAP_JAVA_NAMING_SECURITY_CREDENTIALS: GoodNewsEveryone
        KAFKA_LDAP_JAVA_NAMING_SECURITY_AUTHENTICATION: simple
        # how to locate users and groups
        KAFKA_LDAP_USER_SEARCH_BASE: ou=people,dc=planetexpress,dc=com
        KAFKA_LDAP_GROUP_SEARCH_BASE: ou=people,dc=planetexpress,dc=com
        KAFKA_LDAP_USER_NAME_ATTRIBUTE: uid
        KAFKA_LDAP_USER_OBJECT_CLASS: inetOrgPerson
        KAFKA_LDAP_USER_MEMBEROF_ATTRIBUTE: ou
        KAFKA_LDAP_GROUP_NAME_ATTRIBUTE: cn
        KAFKA_LDAP_GROUP_OBJECT_CLASS: group

        # ======================= CONFIGURE METRICS REPORTER =========================
        KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
        CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1

        # point at our 'INTERNAL' listener

        ############################# Metrics Reporter Settings #############################
        CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:9093
        # CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
        CONFLUENT_METRICS_REPORTER_SECURITY_PROTOCOL: SASL_PLAINTEXT
        CONFLUENT_METRICS_REPORTER_SASL_MECHANISM: GSSAPI
        CONFLUENT_METRICS_REPORTER_SASL_KERBEROS_SERVICE_NAME: kafka
        CONFLUENT_METRICS_REPORTER_SASL_JAAS_CONFIG: |
                                                      \
                                                      com.sun.security.auth.module.Krb5LoginModule required \
                                                      useKeyTab=true \
                                                      storeKey=true \
                                                      keyTab="/var/lib/secret/kafka-admin.key" \
                                                      principal="admin/for-kafka@TEST.CONFLUENT.IO";
        # ======================= OTHER BROKER STUFF =================================
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_CONFLUENT_SECURITY_EVENT_LOGGER_EXPORTER_KAFKA_TOPIC_REPLICAS: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
        # KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
        # CONFLUENT_METRICS_ENABLE: 'true'
        # CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
